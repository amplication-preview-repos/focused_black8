/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SdgMapping as PrismaSdgMapping,
  Business as PrismaBusiness,
} from "@prisma/client";

export class SdgMappingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SdgMappingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.sdgMapping.count(args);
  }

  async sdgMappings(
    args: Prisma.SdgMappingFindManyArgs
  ): Promise<PrismaSdgMapping[]> {
    return this.prisma.sdgMapping.findMany(args);
  }
  async sdgMapping(
    args: Prisma.SdgMappingFindUniqueArgs
  ): Promise<PrismaSdgMapping | null> {
    return this.prisma.sdgMapping.findUnique(args);
  }
  async createSdgMapping(
    args: Prisma.SdgMappingCreateArgs
  ): Promise<PrismaSdgMapping> {
    return this.prisma.sdgMapping.create(args);
  }
  async updateSdgMapping(
    args: Prisma.SdgMappingUpdateArgs
  ): Promise<PrismaSdgMapping> {
    return this.prisma.sdgMapping.update(args);
  }
  async deleteSdgMapping(
    args: Prisma.SdgMappingDeleteArgs
  ): Promise<PrismaSdgMapping> {
    return this.prisma.sdgMapping.delete(args);
  }

  async getBusiness(parentId: string): Promise<PrismaBusiness | null> {
    return this.prisma.sdgMapping
      .findUnique({
        where: { id: parentId },
      })
      .business();
  }
}
